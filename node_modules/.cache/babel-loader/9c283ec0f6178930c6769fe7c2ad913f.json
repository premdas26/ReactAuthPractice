{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prema\\\\Desktop\\\\ReactPractice\\\\AuthPractice\\\\src\\\\store\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjustedExp = new Date(expirationTime).getDate();\n  return adjustedExp - currentTime;\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const isLoggedIn = !!token;\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    const remainingTime = calculateRemainingTime(expirationTime);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: isLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/prema/Desktop/ReactPractice/AuthPractice/src/store/AuthContext.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjustedExp","getDate","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","loginHandler","setItem","remainingTime","logoutHandler","removeItem","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHkB;AAItCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;;AAOA,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;AAC/C,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,WAAW,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBK,OAAzB,EAApB;AAEA,SAAOD,WAAW,GAAGH,WAArB;AACH,CALD;;AAOA,OAAO,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBnB,QAAQ,CAACgB,YAAD,CAAlC;AAEA,QAAMZ,UAAU,GAAG,CAAC,CAACD,KAArB;;AAEA,QAAMiB,YAAY,GAAG,CAACjB,KAAD,EAAQK,cAAR,KAA2B;AAC9CW,IAAAA,QAAQ,CAAChB,KAAD,CAAR;AACAc,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BlB,KAA9B;AAEA,UAAMmB,aAAa,GAAGf,sBAAsB,CAACC,cAAD,CAA5C;AACD,GALD;;AAOA,QAAMe,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAACO,UAAb,CAAwB,OAAxB;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG;AACnBtB,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,UAAU,EAAEA,UAFO;AAGnBC,IAAAA,KAAK,EAAEe,YAHY;AAInBd,IAAAA,MAAM,EAAEiB;AAJW,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,YAA7B;AAAA,cACGV,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9BM;;GAAMZ,mB;;KAAAA,mB;AAgCb,eAAeb,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjustedExp = new Date(expirationTime).getDate();\r\n\r\n    return adjustedExp - currentTime;\r\n}\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const initialToken = localStorage.getItem('token');\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const isLoggedIn = !!token;\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: isLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}